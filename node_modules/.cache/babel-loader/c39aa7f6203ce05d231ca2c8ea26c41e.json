{"ast":null,"code":"var _jsxFileName = \"/home/mb/Desktop/Coding/webdev/React2/hackernews-tut/src/containers/StoriesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\nimport { getStoryIds } from \"../services/hnApi\";\nimport { StoriesContainerWrapper, GlobalStyle } from \"../styles/StoriesContainerStyles\";\nimport Story from \"../components/Story\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StoriesContainer() {\n  _s();\n\n  const [storyIds, setStoryIds] = useState([]);\n  const count = useInfiniteScroll();\n  useEffect(() => {\n    getStoryIds().then(data => setStoryIds(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StoriesContainerWrapper, {\n      \"data-test-id\": \"stories-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), storyIds.slice(0, count).map((storyId, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: `Nr: ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Story, {\n          storyId: storyId\n        }, storyId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StoriesContainer, \"WQQIcI5gg3t9jwLlU6vzZbGmKkQ=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = StoriesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoriesContainer\");","map":{"version":3,"sources":["/home/mb/Desktop/Coding/webdev/React2/hackernews-tut/src/containers/StoriesContainer.js"],"names":["React","useEffect","useState","useInfiniteScroll","getStoryIds","StoriesContainerWrapper","GlobalStyle","Story","StoriesContainer","storyIds","setStoryIds","count","then","data","slice","map","storyId","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SACEC,uBADF,EAEEC,WAFF,QAGO,kCAHP;AAKA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMS,KAAK,GAAGR,iBAAiB,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,GAAGQ,IAAd,CAAoBC,IAAD,IAAUH,WAAW,CAACG,IAAD,CAAxC;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,uBAAD;AAAyB,sBAAa,mBAAtC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkBH,KAAlB,EAAyBI,GAAzB,CAA6B,CAACC,OAAD,EAAUC,KAAV,kBAC5B,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAA,oBAAS,OAAMA,KAAM;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAqB,UAAA,OAAO,EAAED;AAA9B,WAAYA,OAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;;GAtBuBR,gB;UAGRL,iB;;;KAHQK,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useInfiniteScroll } from \"../hooks/useInfiniteScroll\";\n\nimport { getStoryIds } from \"../services/hnApi\";\n\nimport {\n  StoriesContainerWrapper,\n  GlobalStyle,\n} from \"../styles/StoriesContainerStyles\";\n\nimport Story from \"../components/Story\";\n\nexport default function StoriesContainer() {\n  const [storyIds, setStoryIds] = useState([]);\n\n  const count = useInfiniteScroll();\n\n  useEffect(() => {\n    getStoryIds().then((data) => setStoryIds(data));\n  }, []);\n  return (\n    <>\n      <GlobalStyle />\n      <StoriesContainerWrapper data-test-id=\"stories-container\">\n        <h1>Hacker News Stories</h1>\n        {storyIds.slice(0, count).map((storyId, index) => (\n          <React.Fragment>\n            <label>{`Nr: ${index}`}</label>\n            <Story key={storyId} storyId={storyId} />\n          </React.Fragment>\n        ))}\n      </StoriesContainerWrapper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}